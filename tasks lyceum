Задача 1: “НЕТ тавтологии” 

Условие: Напишите программу, которая поможет Грегори понять, сколько раз в тексте он использовал одно и то же слово и все использованыые слова по одному разу. 

Формат ввода:
Строка текста (слова разделены пробелами).

Формат вывода:
Для каждого уникального слова в тексте вывести строку вида: “слово: количество” и все использованыые слова по одному разу.
Порядок вывода слов не важен.

Тест 1:
Ввод: apple banana apple orange banana apple

Вывод:
apple: 3
banana: 2
orange: 1
apple banana orange

Тест 2:
Ввод: the quick brown fox jumps over the lazy dog the

Вывод:
the: 3
quick: 1
brown: 1
fox: 1
jumps: 1
over: 1
lazy: 1
dog: 1
brown dog fox jumps lazy over quick the

Решение:

def process_text(text):
    words = text.lower().split()
    word_counts = {}
    for word in words:
        if word in word_counts:
            word_counts[word] += 1
        else:
            word_counts[word] = 1

    for word, count in word_counts.items():
        print(f"{word}: {count}")

    unique_words = sorted(list(set(words)))
    print(*unique_words)


Задача 2: “Подготовка к игре” 

Условие: Напишите программу, которая поможет Вите разложить бумажные купюры в "Монополии" по их номиналу. Витя - перфекционист, поэтому номинал купюр нужно вывести по возрастанию.

Формат ввода:
Две строки, каждая содержит числа, разделенные пробелами.

Формат вывода:
Строка, содержащая общие числа, отсортированные по возрастанию и разделенные пробелами.

Тест 1:

Ввод:
1 2 3 4 5
3 5 6 7 8

Вывод:
3 5

Тест 2:

Ввод:
10 20 30 40 50
1 2 30 4 10

Вывод:
10 30

Решение:

def find_common_numbers(str1, str2):
    set1 = set(map(int, str1.split()))
    set2 = set(map(int, str2.split()))
    common_numbers = sorted(list(set1.intersection(set2)))
    print(*common_numbers)
